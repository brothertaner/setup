#!/bin/bash

# sources.list dosyasını sil ve yeniden oluştur
echo "sources.list dosyası siliniyor ve yeniden oluşturuluyor..."

# sources.list dosyasını sil
sudo rm -f /etc/apt/sources.list

# Yeni sources.list dosyasını oluştur
cat <<EOF | sudo tee /etc/apt/sources.list
# Ubuntu 20.04 Ana Depoları
deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse

# Ubuntu 20.04 Güncelleme Depoları
deb http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
deb-src http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse

# Ubuntu 20.04 Güncelleme ve Önerilen Paketler
deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse

# Ubuntu 20.04 Kaynak Depoları
deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
EOF

# Depoları güncelleme
sudo apt update -y

# Ubuntu 20.04 için tüm gerekli paketleri güncelle ve yükle
sudo apt upgrade -y

# Gerekli yazılımları yükle
sudo apt install -y nginx certbot python3-certbot-nginx curl stunnel4 nodejs npm

# Nginx'in doğru çalıştığından emin ol
sudo systemctl enable nginx
sudo systemctl start nginx

# WebSocket sunucusu kurulumunu yap
mkdir -p /opt/websocket-server
cd /opt/websocket-server
npm init -y
npm install ws

# WebSocket server için basit bir uygulama oluştur
cat <<EOF > /opt/websocket-server/server.js
const WebSocket = require('ws');
const wss = new WebSocket.Server({ port: 8880 });

wss.on('connection', ws => {
  ws.on('message', message => {
    console.log('received: %s', message);
  });
  ws.send('Hello! Message from server.');
});
EOF

# WebSocket sunucusunu arka planda çalıştır
nohup node /opt/websocket-server/server.js &

# stunnel yapılandırması (domain yolu eklenmiş)
# WebSocket-TLS ve SSH-TLS için yapılandırmalar
domain="n1.openssh.site"
cat <<EOF | sudo tee /etc/stunnel/stunnel.conf
pid = /var/run/stunnel.pid
output = /var/log/stunnel.log

cert = /etc/letsencrypt/live/$domain/fullchain.pem
key = /etc/letsencrypt/live/$domain/privkey.pem

[ssh-tls]
accept = 0.0.0.0:443
connect = 127.0.0.1:22  # SSH bağlantısı

[websocket-tls]
accept = 0.0.0.0:443
connect = 127.0.0.1:8880  # WebSocket sunucu bağlantısı
EOF

# stunnel başlatma
sudo systemctl enable stunnel4
sudo systemctl start stunnel4

# Let's Encrypt için domain doğrulaması ve SSL sertifikası al
sudo certbot --nginx -d $domain

# Nginx yapılandırma dosyasını düzenleyelim
cat <<EOF | sudo tee /etc/nginx/sites-available/$domain
server {
    listen 80;
    server_name $domain;

    location /ws {
        proxy_pass http://127.0.0.1:8880/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_read_timeout 52w;
    }
}

server {
    listen 443 ssl;
    server_name $domain;

    ssl_certificate /etc/letsencrypt/live/$domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$domain/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    location /ws {
        if (\$http_upgrade != "websocket") {
            return 404;
        }
        proxy_pass http://127.0.0.1:8880;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_read_timeout 52w;
    }
}
EOF

# Nginx'i etkinleştir ve yeniden başlat
sudo ln -s /etc/nginx/sites-available/$domain /etc/nginx/sites-enabled/
sudo systemctl reload nginx

# Firewall yapılandırması (80 ve 443 portlarını aç)
sudo ufw allow 'Nginx Full'

# SSL sertifikasının süresini yenilemek için cron job oluştur
echo "0 0 * * * certbot renew --quiet" | sudo tee -a /etc/crontab > /dev/null

echo "Kurulum tamamlandı! WebSocket-TLS ve SSH-TLS çalışmaya başladı. Nginx üzerinden SSL sertifikası alındı ve WebSocket ile güvenli bağlantı sağlanıyor. Ayrıca sources.list dosyası güncellendi."
